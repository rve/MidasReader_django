var _isDown, _points, _r, _g, _rc;
function onLoadEvent()
{
  document.onselectstart = function() { return false; }
  document.onmousedown = function() { return false; }
  _points = new Array();
  _r = new DollarRecognizer();

  var canvas = document.getElementById('myCanvas');
  _g = canvas.getContext('2d');
  _g.fillStyle = "rgb(0,0,225)";
  _g.strokeStyle = "rgb(0,0,225)";
  _g.lineWidth = 3;
  _g.font = "16px Gentilis";
  _rc = getCanvasRect(canvas); // canvas rect on page
  _g.fillStyle = "rgb(255,255,136)";
  _g.fillRect(0, 0, _rc.width, 20);

  _isDown = false;
}

function getCanvasRect(canvas)
{
  var w = canvas.width;
  var h = canvas.height;

  var cx = canvas.offsetLeft;
  var cy = canvas.offsetTop;
  while (canvas.offsetParent != null)
  {
      canvas = canvas.offsetParent;
      cx += canvas.offsetLeft;
      cy += canvas.offsetTop;
    }
  return {x: cx, y: cy, width: w, height: h};
}
function getScrollY()
{
  var scrollY = 0;
  if (typeof(document.body.parentElement) != 'undefined')
  {
      scrollY = document.body.parentElement.scrollTop; // IE
    }
  else if (typeof(window.pageYOffset) != 'undefined')
  {
      scrollY = window.pageYOffset; // FF
    }
  return scrollY;
}


n mouseDownEvent(x, y)
                                                                                                                       
                                                                                                                                                                                                                                              $(n mouseDownEvent(x, y)
                                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                                                                                                                                     document.getElementById(n mouseDownEvent(x, y)
  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            document.getElementById(n mouseDownEvent(x, y)
{
  _points.length = 1;
  _points[0] = new Point(x, y);
  drawText("Recording unistroke...");
  _g.fillRect(x - 4, y - 3, 9, 9);
  _isDown = true;
    }
    _points.length = 1;
    _points[0] = new Point(x, y);
    drawText("Recording unistroke...");
  {
    _isDown = true;
}
function mouseMoveEvent(x, y)
{
  if (_isDown)
    {
      x -= _rc.x;
      y -= _rc.y - getScrollY();
      _points[_points.length] = new Point(x, y); // append
  {
    }
}
      {
            var result = _r.Recognize(_points, document.getElementById('useProtractor').checked);
          }
      else // fewer than 10 points were inputted
      {
        {
          var result = _r.Recognize(_points, document.getElementById('useProtractor').checked);
        }
        else // fewer than 10 points were inputted
          {
            $(".C_and_N").slideToggle("slow");
            $(".commentTxt").hide();
            $(".addCm").hide();
            document.getElementById("CNID").style.left=mousePos.x.toString(10)+"px";
            document.getElementById("CNID").style.top=mousePos.y.toString(10)+"px";

          }
    }
}
function drawText(str)
{
  _g.fillStyle = "rgb(255,255,136)";
  _g.fillRect(0, 0, _rc.width, 20);
  _g.fillStyle = "rgb(0,0,255)";
  _g.fillText(str, 1, 14);
}
function drawConnectedPoint(from, to)
{
  _g.beginPath();
  _g.moveTo(_points[from].X, _points[from].Y);
  _g.lineTo(_points[to].X, _points[to].Y);
  _g.closePath();
  _g.stroke();
}
function round(n, d) // round 'n' to 'd' decimals
{
  d = Math.pow(10, d);
  return Math.round(n * d) / d
}

